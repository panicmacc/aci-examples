---

- name: Create VLAN Pool for FW VPC Uplink 
  aci_vlan_pool:
    host: "{{ inventory_hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    pool: "{{ name_prefix }}_fw_pool"
    pool_allocation_mode: "static" 
    state: "present"
    validate_certs: False
    description: "VLAN Pool managed by Ansible"

- name: Add a VLAN encap block for each firewall l3out
  aci_vlan_pool_encap_block:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    pool: "{{ name_prefix }}_fw_pool"
    pool_allocation_mode: "static"
    block_name: "{{ name_prefix }}_fw_pool-v{{ item.vlan_id }}"
    block_start: "{{ item.vlan_id }}" 
    block_end: "{{ item.vlan_id }}" 
    state: "present"
  loop: "{{ fw_peers }}"

- name: Add a VLAN encap block for each firewalled legacy VLAN
  aci_vlan_pool_encap_block:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    pool: "{{ name_prefix }}_fw_pool"
    pool_allocation_mode: "static"
    block_name: "{{ name_prefix }}_fw_pool-v{{ item.vlan_id }}"
    block_start: "{{ item.vlan_id }}" 
    block_end: "{{ item.vlan_id }}" 
    state: "present"
  loop: "{{ legacy_networks }}"

- name: Create an L3 External Domain for WAN-uplink
  aci_domain:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    domain: "{{ name_prefix }}_wan_l3dom"
    domain_type: "l3dom"
    state: "present"

- name: Bind the WAN-uplink L3 Ext Domain to its VLAN Pool
  aci_domain_to_vlan_pool:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    domain: "{{ name_prefix }}_wan_l3dom"
    domain_type: "l3dom"
    pool: "{{ name_prefix }}_wan_pool"
    pool_allocation_mode: "static"
    state: "present"

- name: Create an AEP for the WAN-uplink
  aci_aep:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    aep: "{{ name_prefix }}_wan_aep"
    description: "AEP managed by Ansible" 
    state: "present"

- name: Bind the WAN-uplink AEP to the WAN-uplink l3dom
  aci_aep_to_domain:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    aep: "{{ name_prefix }}_wan_aep"
    domain: "{{ name_prefix }}_wan_l3dom"
    domain_type: "l3dom"
    state: "present"

- name: Add a VPC Interface Policy Group
  aci_interface_policy_leaf_policy_group:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    policy_group: "{{ l3_ext_connection_name }}"
    aep: "{{ l3_ext_connection_name }}"
    cdp_policy: "default"
    egress_data_plane_policing_policy: "default"
    fibre_channel_interface_policy: "default"
    ingress_data_plane_policing_policy: "default"
    l2_interface_policy: "default"
    lag_type: "node"
    link_level_policy: "default"
    lldp_policy: "default"
    mcp_policy: "default"
    monitoring_policy: "default"
    port_channel_policy: "lacp_active"
    port_security_policy: "default"
    priority_flow_control_policy: "default"
    slow_drain_policy: "default"
    storm_control_interface_policy: "default"
    stp_interface_policy: "default" 
    description: "Policy Group managed by Ansible"
    state: "present"

- name: Add an Interface Profile for the WAN uplink p2p links
  aci_interface_policy_leaf_profile:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    leaf_interface_profile: "{{ name_prefix }}_wan_intprof"
    description: "Interface Profile managed by Ansible"
    state: "present"

- name: Add WAN peer p2p interfaces to interface profile 
  include_tasks: configure_wan_p2p_interfaces.yml
  loop: "{{ wan_peers }}"
  loop_control:
    loop_var: wan_peer

- name: Create a Switch (Leaf) Profile
  aci_switch_policy_leaf_profile:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    leaf_profile: "{{ item.nodes.side_a.node_id }}_{{ item.nodes.side_b.node_id }}"
    description: "Border leaves"
    state: present 
  loop: "{{ wan_peers }}"

- name: Add the Interface Profile to the Switch (Leaf) Profile
  aci_interface_selector_to_switch_policy_leaf_profile:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    interface_selector: "{{ name_prefix }}_wan_intprof"
    leaf_profile: "{{ item.nodes.side_a.node_id }}_{{ item.nodes.side_b.node_id }}"
    state: "present"
  loop: "{{ wan_peers }}"

- name: Add Leaf Selector to the Leaf Profile for Border Leaf A
  aci_switch_leaf_selector:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    leaf_profile: "{{ item.nodes.side_a.node_id }}_{{ item.nodes.side_b.node_id }}"
    leaf: "leaf_{{ item.nodes.side_a.node_id }}" 
    leaf_node_blk: "block_{{ item.nodes.side_a.node_id }}"
    from: "{{ item.nodes.side_a.node_id }}"
    to: "{{ item.nodes.side_a.node_id }}" 
  loop: "{{ wan_peers }}"

- name: Add Leaf Selector to the Leaf Profile for Border Leaf B
  aci_switch_leaf_selector:
    host: "{{ inventory_hostname }}"
    validate_certs: False
    username: "{{ username }}"
    password: "{{ password }}"
    leaf_profile: "{{ item.nodes.side_a.node_id }}_{{ item.nodes.side_b.node_id }}"
    leaf: "leaf_{{ item.nodes.side_b.node_id }}" 
    leaf_node_blk: "block_{{ item.nodes.side_b.node_id }}"
    from: "{{ item.nodes.side_b.node_id }}"
    to: "{{ item.nodes.side_b.node_id }}" 
  loop: "{{ wan_peers }}"

