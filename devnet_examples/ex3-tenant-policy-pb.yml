---

- name: ENSURE APPLICATION CONFIGURATION EXISTS
  hosts: apic
  connection: local
  gather_facts: False

  vars_prompt:
    - name: "tenant"
      prompt: "What would you like to name your Tenant?"
      private: no

  tasks:
    - name: ENSURE APPLICATIONS TENANT EXISTS
      aci_tenant:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        description: "Tenant Created Using Ansible"

    - name: ENSURE TENANTE VRF EXISTS
      aci_vrf:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        vrf: "{{ vrf }}"
        description: "VRF Created Using Ansible"

    - name: ENSURE TENANT BRIDGE DOMAIN EXISTS
      aci_bd:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: False
        state: "present"
        tenant: "{{ tenant }}"
        bd: "{{ bd | default('prod_bd') }}"
        vrf: "{{ vrf }}"
        description: "BD Created Using Ansible"

    - name: ENSURE TENANT SUBNET EXISTS
      aci_bd_subnet:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: False
        state: "present"
        tenant: "{{ tenant }}"
        bd: "{{ bd | default('prod_bd')}}"
        gateway: "10.1.100.1"
        mask: 24
        scope: "public"
        description: "Subnet Created Using Ansible"

    - name: ENSURE TENANT FILTERS EXIST
      aci_filter:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        action: "post"
        use_ssl: True 
        tenant: "{{ tenant }}"
        filter: "{{ item }}"
        descr: "Filter Created Using Ansible"
        validate_certs: False
      with_items:
        - "https"
        - "sql"

    - name: ENSURE FILTERS HAVE FILTER ENTRIES
      aci_filter_entry:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        filter: "{{ item.filter }}"
        entry: "{{ item.entry }}"
        ether_type: "ip"
        ip_protocol: "tcp"
        dst_port_start: "{{ item.port }}"
        dst_port_end: "{{ item.port }}"
      with_items:
        - filter: "https"
          entry: "https"
          port: 443
        - filter: "sql"
          entry: "sql"
          port: 1433

    - name: ENSURE TENANT CONTRACTS EXIST
      aci_contract:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        contract: "{{ item }}"
        scope: "context"
        description: "Contract Created Using Ansible"
      with_items:
        - "web"
        - "sql"

    - name: ENSURE CONTRACTS HAVE CONTRACT SUBJECTS
      aci_contract_subject:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant: "{{ tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.subject }}"
      with_items:
        - contract: "web"
          subject: "https"
        - contract: "sql"
          subject: "sql"
    
    - name: ENSURE CONTRACTS SUBJECTS ARE ASSOCIATED WITH FILTERS
      aci_contract_subject_to_filter:
        host: "{{ inventory_hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: "present"
        validate_certs: False
        tenant_name: "{{ tenant }}"
        contract: "{{ item.contract }}"
        subject: "{{ item.subject }}"
        filter: "{{ item.filter }}"
      with_items:
        - contract: "web"
          subject: "https"
          filter: "https"
        - contract: "sql"
          subject: "sql"
          filter: "sql"

